{"ast":null,"code":"import { INCREMENT_REQUEST, INCREMENT_SUCCESS, INCREMENT_FAILURE, DECREMENT_REQUEST, DECREMENT_SUCCESS, DECREMENT_FAILURE } from \"../actions/actionTypes\";\nconst initialState = {\n  value: 0,\n  loading: null,\n  error: null\n};\n\nconst counterReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_REQUEST:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case INCREMENT_SUCCESS:\n      console.log(action);\n      return { ...state,\n        value: state.value + action.step,\n        loading: false,\n        error: null\n      };\n\n    case INCREMENT_FAILURE:\n      return { ...state,\n        error: action.error\n      };\n\n    case DECREMENT_REQUEST:\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case DECREMENT_SUCCESS:\n      return { ...state,\n        value: state.value - 1,\n        loading: false,\n        error: null\n      };\n\n    case DECREMENT_FAILURE:\n      return { ...state,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default counterReducers;","map":{"version":3,"sources":["/Users/christopherdalziel/Documents/personal-code/redux-thunk-example/src/reducers/counterReducers.js"],"names":["INCREMENT_REQUEST","INCREMENT_SUCCESS","INCREMENT_FAILURE","DECREMENT_REQUEST","DECREMENT_SUCCESS","DECREMENT_FAILURE","initialState","value","loading","error","counterReducers","state","action","type","console","log","step"],"mappings":"AAAA,SACEA,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,iBANF,QAOO,wBAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,iBAAL;AACE,aAAO,EAAE,GAAGW,KAAL;AAAYH,QAAAA,OAAO,EAAE,IAArB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAAP;;AACF,SAAKR,iBAAL;AACEa,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,aAAO,EACL,GAAGD,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACI,IAFvB;AAGLR,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAKP,iBAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAA1B,OAAP;;AACF,SAAKN,iBAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYH,QAAAA,OAAO,EAAE,IAArB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAAP;;AACF,SAAKL,iBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc,CAFhB;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAKJ,iBAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAA1B,OAAP;;AAEF;AACE,aAAOE,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,eAAf","sourcesContent":["import {\n  INCREMENT_REQUEST,\n  INCREMENT_SUCCESS,\n  INCREMENT_FAILURE,\n  DECREMENT_REQUEST,\n  DECREMENT_SUCCESS,\n  DECREMENT_FAILURE,\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  value: 0,\n  loading: null,\n  error: null,\n};\n\nconst counterReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_REQUEST:\n      return { ...state, loading: true, error: null };\n    case INCREMENT_SUCCESS:\n      console.log(action);\n      return {\n        ...state,\n        value: state.value + action.step,\n        loading: false,\n        error: null,\n      };\n    case INCREMENT_FAILURE:\n      return { ...state, error: action.error };\n    case DECREMENT_REQUEST:\n      return { ...state, loading: true, error: null };\n    case DECREMENT_SUCCESS:\n      return {\n        ...state,\n        value: state.value - 1,\n        loading: false,\n        error: null,\n      };\n    case DECREMENT_FAILURE:\n      return { ...state, error: action.error };\n\n    default:\n      return state;\n  }\n};\n\nexport default counterReducers;\n"]},"metadata":{},"sourceType":"module"}