{"ast":null,"code":"import { INCREMENT_REQUEST, DECREMENT_REQUEST, INCREMENT_SUCCESS } from \"./actionTypes\";\n\nconst delay = ms => new Promise(res => setTimeout(res, ms)); // const delayIncrement = (step, ) => {\n//   return\n// };\n\n\nexport const incrementAction = step => {\n  return function (dispatch) {\n    dispatch({\n      type: INCREMENT_REQUEST\n    });\n    delay(2000).then(step => dispatch({\n      type: INCREMENT_SUCCESS,\n      step\n    }));\n  };\n};\nexport const increment = step => {\n  return {\n    type: INCREMENT_REQUEST,\n    payload: {\n      step: step\n    }\n  };\n};\nexport const decrementAction = step => {\n  return {\n    type: DECREMENT_REQUEST,\n    payload: {\n      step: step\n    }\n  };\n};","map":{"version":3,"sources":["/Users/christopherdalziel/Documents/personal-code/redux-thunk-example/src/actions/index.js"],"names":["INCREMENT_REQUEST","DECREMENT_REQUEST","INCREMENT_SUCCESS","delay","ms","Promise","res","setTimeout","incrementAction","step","dispatch","type","then","increment","payload","decrementAction"],"mappings":"AAAA,SACEA,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,QAIO,eAJP;;AAMA,MAAMC,KAAK,GAAIC,EAAD,IAAQ,IAAIC,OAAJ,CAAaC,GAAD,IAASC,UAAU,CAACD,GAAD,EAAMF,EAAN,CAA/B,CAAtB,C,CAEA;AACA;AACA;;;AAEA,OAAO,MAAMI,eAAe,GAAIC,IAAD,IAAU;AACvC,SAAO,UAAUC,QAAV,EAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAGAG,IAAAA,KAAK,CAAC,IAAD,CAAL,CAAYS,IAAZ,CAAkBH,IAAD,IAAUC,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,iBAAR;AAA2BO,MAAAA;AAA3B,KAAD,CAAnC;AACD,GALD;AAMD,CAPM;AASP,OAAO,MAAMI,SAAS,GAAIJ,IAAD,IAAU;AACjC,SAAO;AACLE,IAAAA,IAAI,EAAEX,iBADD;AAELc,IAAAA,OAAO,EAAE;AACPL,MAAAA,IAAI,EAAEA;AADC;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,MAAMM,eAAe,GAAIN,IAAD,IAAU;AACvC,SAAO;AACLE,IAAAA,IAAI,EAAEV,iBADD;AAELa,IAAAA,OAAO,EAAE;AACPL,MAAAA,IAAI,EAAEA;AADC;AAFJ,GAAP;AAMD,CAPM","sourcesContent":["import {\n  INCREMENT_REQUEST,\n  DECREMENT_REQUEST,\n  INCREMENT_SUCCESS,\n} from \"./actionTypes\";\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n\n// const delayIncrement = (step, ) => {\n//   return\n// };\n\nexport const incrementAction = (step) => {\n  return function (dispatch) {\n    dispatch({\n      type: INCREMENT_REQUEST,\n    });\n    delay(2000).then((step) => dispatch({ type: INCREMENT_SUCCESS, step }));\n  };\n};\n\nexport const increment = (step) => {\n  return {\n    type: INCREMENT_REQUEST,\n    payload: {\n      step: step,\n    },\n  };\n};\n\nexport const decrementAction = (step) => {\n  return {\n    type: DECREMENT_REQUEST,\n    payload: {\n      step: step,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}